/*

Copyright 2016 Continusec Pty Ltd

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

*/

syntax = "proto3";

service GeeCertServer {
    rpc GetSSHCerts (SSHCertsRequest) returns (SSHCertsResponse) {}
}

message SSHCertsRequest {
    string id_token = 1;
    string public_key = 2;
}

enum ResponseCode {
    OK = 0;
    INVALID_ID_TOKEN = 1;
    NO_CERTS_ALLOWED = 2;
}

message SSHCertsResponse {
    ResponseCode status = 1;
    string certificate = 2;
    repeated string certificate_authorities = 3;
    repeated string config = 4;
}

message ServerConfig {
    message UserConfig {
        string username = 1;
        repeated string extra_principals = 2;
        map<string,string> cert_permissions = 3;
    }

    string ca_key_path = 1;
    int32 generate_cert_duration_seconds = 2;
    string client_config_scope = 3;
    map<string,UserConfig> allowed_users = 4;
    int32 listen_port = 5;
    string allowed_domain_for_id_token = 6;
    string allowed_client_id_for_id_token = 7;
    
    string server_cert_path = 8;
    string server_key_path = 9;
    
    repeated string additional_ssh_configuration_line = 10;
    string ca_comment = 11;

    int32 http_listen_port = 12; // listens on localhost only, caddy file should be used for HTTPS (will fetch certs from Let's Encrypt automatically)
    repeated string allowed_hosts = 13;
    string caddy_file_path = 14;
}